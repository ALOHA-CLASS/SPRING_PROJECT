DROP TABLE IF EXISTS batch_job_execution_seq CASCADE;
DROP TABLE IF EXISTS BATCH_JOB_EXECUTION_CONTEXT CASCADE;
DROP TABLE IF EXISTS batch_job_seq;

DROP TABLE IF EXISTS BATCH_JOB_EXECUTION CASCADE;
DROP TABLE IF EXISTS BATCH_STEP_EXECUTION CASCADE;

DROP TABLE IF EXISTS batch_job_instance CASCADE;


---


DROP TABLE IF EXISTS batch_job_execution_seq;
CREATE TABLE `batch_job_execution_seq` (
  `ID` BIGINT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`ID`)
);


---

DROP TABLE IF EXISTS batch_job_instance CASCADE;
CREATE TABLE `batch_job_instance` (
  `JOB_INSTANCE_ID` BIGINT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  `VERSION` BIGINT,
  `JOB_NAME` VARCHAR(100) NOT NULL,
  `JOB_KEY` VARCHAR(32) NOT NULL,
  UNIQUE KEY `JOB_INST_UN` (`JOB_NAME`,`JOB_KEY`)
);



---

DROP TABLE IF EXISTS BATCH_JOB_EXECUTION CASCADE;
CREATE TABLE BATCH_JOB_EXECUTION  (
  JOB_EXECUTION_ID BIGINT AUTO_INCREMENT  PRIMARY KEY ,
  VERSION BIGINT,
  JOB_INSTANCE_ID BIGINT NOT NULL,
  CREATE_TIME TIMESTAMP NOT NULL,
  START_TIME TIMESTAMP DEFAULT NULL,
  END_TIME TIMESTAMP DEFAULT NULL,
  STATUS VARCHAR(10),
  EXIT_CODE VARCHAR(20),
  EXIT_MESSAGE VARCHAR(2500),
  LAST_UPDATED TIMESTAMP,
  JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL
--   ,
--   constraint JOB_INSTANCE_EXECUTION_FK foreign key (JOB_INSTANCE_ID)
--   references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
) ;
---


DROP TABLE IF EXISTS BATCH_JOB_EXECUTION_CONTEXT;
CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT (
  JOB_EXECUTION_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  SHORT_CONTEXT VARCHAR(2500) NOT NULL,
  SERIALIZED_CONTEXT TEXT,
  FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);


---

DROP TABLE IF EXISTS BATCH_STEP_EXECUTION CASCADE;
CREATE TABLE BATCH_STEP_EXECUTION (
  STEP_EXECUTION_ID BIGINT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  VERSION BIGINT NOT NULL,
  STEP_NAME VARCHAR(100) NOT NULL,
  JOB_EXECUTION_ID BIGINT NOT NULL,
  START_TIME TIMESTAMP NOT NULL,
  END_TIME TIMESTAMP DEFAULT NULL,
  STATUS VARCHAR(10),
  COMMIT_COUNT BIGINT,
  READ_COUNT BIGINT,
  FILTER_COUNT BIGINT,
  WRITE_COUNT BIGINT,
  READ_SKIP_COUNT BIGINT,
  WRITE_SKIP_COUNT BIGINT,
  PROCESS_SKIP_COUNT BIGINT,
  ROLLBACK_COUNT BIGINT,
  EXIT_CODE VARCHAR(20),
  EXIT_MESSAGE VARCHAR(2500),
  LAST_UPDATED TIMESTAMP,
  FOREIGN KEY (JOB_EXECUTION_ID) REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);





---

DROP TABLE IF EXISTS batch_job_seq;
CREATE TABLE `batch_job_seq` (
  `ID` BIGINT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`ID`)
);


---